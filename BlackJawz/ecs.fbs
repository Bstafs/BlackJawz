namespace ECS;

table Transform {
  position: [float];  // {x, y, z}
  rotation: [float];  // {x, y, z}
  scale: [float];     // {x, y, z}
  world_matrix: [float]; // 4x4 matrix as a flat array
}

table Geometry {
  indices_count: uint32;
  vertex_buffer_stride: uint32;
  vertex_buffer_offset: uint32;
  vertex_buffer: [ubyte];
  index_buffer: [ubyte];
}

table Texture {
  dds_data_diffuse: [ubyte];  
  dds_data_normal: [ubyte];  
  dds_data_metal: [ubyte];  
  dds_data_roughness: [ubyte];
  dds_data_ao: [ubyte];
  dds_data_displacement: [ubyte];      
}

table Appearance {
  geometry: Geometry;
  texture: Texture;
}

enum LightType : byte { 
  Point = 0, 
  Directional = 1, 
  Spot = 2 
}

table Light {
  type: LightType = Point;

  diffuse_light: [float];   // {r, g, b, a}
  ambient_light: [float];   // {r, g, b, a}
  specular_light: [float];  // {r, g, b, a}
  
  specular_power: float;

  // For Point & Spot Lights
  range: float;

  // For Directional & Spot Lights
  direction: [float]; // {x, y, z}
  intensity: float;

  // Attenuation for Point & Spot Lights
  attenuation: [float]; // {constant, linear, quadratic}

  // Spotlight-specific
  spot_inner_cone: float;
  spot_outer_cone: float;
}

table Entity {
  id: uint32;
  name: string;
  transform: Transform;
  appearance: Appearance;
  light: Light;
}

table Scene {
  entities: [Entity];
}

root_type Scene;